(ns wthjh.reagent
  (:require
    [reagent.core :as r]
    ["react-dom/client" :as rdom]
    [shadow.css :refer (css)]
    ))

(defonce state-ref
  (atom
    (into []
      (for [id (range 100)]
        {:id id
         :target 20
         :current 21.5
         :state "heating"
         :last-update (js/Date.now)}))))

(def $col-num
  (css :text-right :px-2))

(def $col-state
  (css :text-center :px-2))

(def $col-ts
  (css :text-left :px-2))

(def $state-icon
  (css :block {:width "32px" :height "32px"}))

(defn format-temp [val]
  (str (.toFixed val 1) " Â°C"))


(defn format-ts [val]
  (let [d (js/Date. val)]
    (.toLocaleString d)
    ))

(defn format-state [state]
  (case state
    "heating" ;; https://www.svgrepo.com/show/195950/heating-air-conditioner.svg
    [:svg {:class $state-icon :xmlns "http://www.w3.org/2000/svg" :version "1.1" :id "Layer_1" :viewBox "0 0 512 512"}
     [:path {:fill "#B3404A;" :d "M465.94,475.301h-70.358c-7.484,0-13.553-6.068-13.553-13.553s6.069-13.553,13.553-13.553h70.358  c10.452,0,18.955-8.503,18.955-18.955V182.167c0-10.452-8.503-18.955-18.955-18.955H137.925c-10.452,0-18.955,8.503-18.955,18.955  v247.073c0,10.452,8.503,18.955,18.955,18.955h182.984c7.484,0,13.553,6.068,13.553,13.553s-6.069,13.553-13.553,13.553H137.925  c-25.398,0-46.06-20.663-46.06-46.06V182.167c0-25.398,20.663-46.06,46.06-46.06H465.94c25.398,0,46.06,20.663,46.06,46.06v247.073  C512,454.637,491.337,475.301,465.94,475.301z"}]
     [:path {:fill "#F4B2B0;" :d "M190.663,411.956L190.663,411.956c-13.019,0-23.67-10.651-23.67-23.67V223.118  c0-13.019,10.651-23.67,23.67-23.67l0,0c13.019,0,23.67,10.651,23.67,23.67v165.167C214.333,401.304,203.68,411.956,190.663,411.956  z"}]
     [:path {:fill "#B3404A;" :d "M190.663,425.508c-20.526,0-37.223-16.698-37.223-37.223V223.118  c0-20.524,16.697-37.221,37.223-37.221s37.223,16.697,37.223,37.221v165.167C227.884,408.811,211.187,425.508,190.663,425.508z   M190.663,213.004c-5.578,0-10.117,4.539-10.117,10.116v165.166c0,5.578,4.539,10.117,10.117,10.117s10.117-4.539,10.117-10.117  V223.118C200.779,217.541,196.241,213.004,190.663,213.004z"}]
     [:path {:fill "#F4B2B0;" :d "M301.932,411.956L301.932,411.956c-13.019,0-23.67-10.651-23.67-23.67V223.118  c0-13.019,10.651-23.67,23.67-23.67l0,0c13.019,0,23.67,10.651,23.67,23.67v165.167C325.601,401.304,314.95,411.956,301.932,411.956  z"}]
     [:path {:fill "#B3404A;" :d "M301.931,425.508c-20.526,0-37.223-16.698-37.223-37.223V223.118  c0-20.524,16.697-37.221,37.223-37.221c20.526,0,37.223,16.697,37.223,37.221v165.167  C339.154,408.811,322.457,425.508,301.931,425.508z M301.931,213.004c-5.578,0-10.117,4.539-10.117,10.116v165.166  c0,5.578,4.539,10.117,10.117,10.117s10.117-4.539,10.117-10.117V223.118C312.048,217.541,307.509,213.004,301.931,213.004z"}]
     [:path {:fill "#F4B2B0;" :d "M413.202,411.956L413.202,411.956c-13.019,0-23.67-10.651-23.67-23.67V223.118  c0-13.019,10.651-23.67,23.67-23.67l0,0c13.019,0,23.67,10.651,23.67,23.67v165.167C436.87,401.304,426.219,411.956,413.202,411.956  z"}]
     [:g
      [:path {:fill "#B3404A;" :d "M413.202,425.508c-20.526,0-37.223-16.698-37.223-37.223V223.118   c0-20.524,16.697-37.221,37.223-37.221s37.223,16.697,37.223,37.221v165.167C450.424,408.811,433.726,425.508,413.202,425.508z    M413.202,213.004c-5.578,0-10.117,4.539-10.117,10.116v165.166c0,5.578,4.539,10.117,10.117,10.117s10.117-4.539,10.117-10.117   V223.118C423.319,217.541,418.78,213.004,413.202,213.004z"}]
      [:path {:fill "#B3404A;" :d "M105.416,230.486H58.277c-7.484,0-13.553-6.068-13.553-13.553c0-7.485,6.069-13.553,13.553-13.553   h47.139c7.484,0,13.553,6.068,13.553,13.553C118.969,224.418,112.901,230.486,105.416,230.486z"}]
      [:path {:fill "#B3404A;" :d "M105.416,408.027H58.277c-7.484,0-13.553-6.068-13.553-13.553c0-7.485,6.069-13.553,13.553-13.553   h47.139c7.484,0,13.553,6.068,13.553,13.553C118.969,401.959,112.901,408.027,105.416,408.027z"}]
      [:path {:fill "#B3404A;" :d "M47.435,251.51c-7.484,0-13.553-6.068-13.553-13.553V92.943c0-7.485,6.069-13.553,13.553-13.553   s13.553,6.068,13.553,13.553v145.014C60.987,245.442,54.918,251.51,47.435,251.51z"}]
      [:path {:fill "#B3404A;" :d "M47.435,475.301c-7.484,0-13.553-6.068-13.553-13.553V305.703c0-7.485,6.069-13.553,13.553-13.553   s13.553,6.068,13.553,13.553v156.045C60.987,469.234,54.918,475.301,47.435,475.301z"}]]
     [:rect {:x "13.553" :y "50.253" :fill "#F4B2B0;" :width "67.764" :height "73.185"}]
     [:path {:fill "#B3404A;" :d "M81.317,136.989H13.553C6.069,136.989,0,130.922,0,123.436V50.252  c0-7.485,6.069-13.553,13.553-13.553h67.764c7.484,0,13.553,6.068,13.553,13.553v73.185C94.869,130.922,88.8,136.989,81.317,136.989  z M27.106,109.884h40.658V63.804H27.106V109.884z"}]]

    "cooling" ;; https://www.svgrepo.com/show/195907/heating-air-conditioning.svg
    [:svg {:class $state-icon :xmlns "http://www.w3.org/2000/svg" :version "1.1" :id "Layer_1" :viewBox "0 0 512 512"}
     [:path {:fill "#2D527C;" :d "M465.94,475.301h-70.358c-7.484,0-13.553-6.068-13.553-13.553s6.069-13.553,13.553-13.553h70.358  c10.452,0,18.955-8.503,18.955-18.955V182.167c0-10.452-8.503-18.955-18.955-18.955H137.925c-10.452,0-18.955,8.503-18.955,18.955  v247.073c0,10.452,8.503,18.955,18.955,18.955h182.984c7.484,0,13.553,6.068,13.553,13.553s-6.069,13.553-13.553,13.553H137.925  c-25.398,0-46.06-20.663-46.06-46.06V182.167c0-25.398,20.663-46.06,46.06-46.06H465.94c25.398,0,46.06,20.663,46.06,46.06v247.073  C512,454.637,491.337,475.301,465.94,475.301z"}]
     [:path {:fill "#CEE8FA;" :d "M190.663,411.956L190.663,411.956c-13.019,0-23.67-10.651-23.67-23.67V223.118  c0-13.019,10.651-23.67,23.67-23.67l0,0c13.019,0,23.67,10.651,23.67,23.67v165.167C214.333,401.304,203.68,411.956,190.663,411.956  z"}]
     [:path {:fill "#2D527C;" :d "M190.663,425.508c-20.526,0-37.223-16.698-37.223-37.223V223.118  c0-20.524,16.697-37.221,37.223-37.221s37.223,16.697,37.223,37.221v165.167C227.884,408.811,211.187,425.508,190.663,425.508z   M190.663,213.004c-5.578,0-10.117,4.539-10.117,10.116v165.166c0,5.578,4.539,10.117,10.117,10.117s10.117-4.539,10.117-10.117  V223.118C200.779,217.541,196.241,213.004,190.663,213.004z"}]
     [:path {:fill "#CEE8FA;" :d "M301.932,411.956L301.932,411.956c-13.019,0-23.67-10.651-23.67-23.67V223.118  c0-13.019,10.651-23.67,23.67-23.67l0,0c13.019,0,23.67,10.651,23.67,23.67v165.167C325.601,401.304,314.95,411.956,301.932,411.956  z"}]
     [:path {:fill "#2D527C;" :d "M301.931,425.508c-20.526,0-37.223-16.698-37.223-37.223V223.118  c0-20.524,16.697-37.221,37.223-37.221c20.526,0,37.223,16.697,37.223,37.221v165.167  C339.154,408.811,322.457,425.508,301.931,425.508z M301.931,213.004c-5.578,0-10.117,4.539-10.117,10.116v165.166  c0,5.578,4.539,10.117,10.117,10.117s10.117-4.539,10.117-10.117V223.118C312.048,217.541,307.509,213.004,301.931,213.004z"}]
     [:path {:fill "#CEE8FA;" :d "M413.202,411.956L413.202,411.956c-13.019,0-23.67-10.651-23.67-23.67V223.118  c0-13.019,10.651-23.67,23.67-23.67l0,0c13.019,0,23.67,10.651,23.67,23.67v165.167C436.87,401.304,426.219,411.956,413.202,411.956  z"}]
     [:g
      [:path {:fill "#2D527C;" :d "M413.202,425.508c-20.526,0-37.223-16.698-37.223-37.223V223.118   c0-20.524,16.697-37.221,37.223-37.221s37.223,16.697,37.223,37.221v165.167C450.424,408.811,433.726,425.508,413.202,425.508z    M413.202,213.004c-5.578,0-10.117,4.539-10.117,10.116v165.166c0,5.578,4.539,10.117,10.117,10.117s10.117-4.539,10.117-10.117   V223.118C423.319,217.541,418.78,213.004,413.202,213.004z"}]
      [:path {:fill "#2D527C;" :d "M105.416,230.486H58.277c-7.484,0-13.553-6.068-13.553-13.553c0-7.485,6.069-13.553,13.553-13.553   h47.139c7.484,0,13.553,6.068,13.553,13.553C118.969,224.418,112.901,230.486,105.416,230.486z"}]
      [:path {:fill "#2D527C;" :d "M105.416,408.027H58.277c-7.484,0-13.553-6.068-13.553-13.553c0-7.485,6.069-13.553,13.553-13.553   h47.139c7.484,0,13.553,6.068,13.553,13.553C118.969,401.959,112.901,408.027,105.416,408.027z"}]
      [:path {:fill "#2D527C;" :d "M47.435,251.51c-7.484,0-13.553-6.068-13.553-13.553V92.943c0-7.485,6.069-13.553,13.553-13.553   s13.553,6.068,13.553,13.553v145.014C60.987,245.442,54.918,251.51,47.435,251.51z"}]
      [:path {:fill "#2D527C;" :d "M47.435,475.301c-7.484,0-13.553-6.068-13.553-13.553V305.703c0-7.485,6.069-13.553,13.553-13.553   s13.553,6.068,13.553,13.553v156.045C60.987,469.234,54.918,475.301,47.435,475.301z"}]]
     [:rect {:x "13.553" :y "50.253" :fill "#CEE8FA;" :width "67.764" :height "73.185"}]
     [:path {:fill "#2D527C;" :d "M81.317,136.989H13.553C6.069,136.989,0,130.922,0,123.436V50.252  c0-7.485,6.069-13.553,13.553-13.553h67.764c7.484,0,13.553,6.068,13.553,13.553v73.185C94.869,130.922,88.8,136.989,81.317,136.989  z M27.106,109.884h40.658V63.804H27.106V109.884z"}]]

    ;; default, https://www.svgrepo.com/show/454866/heating-furnace.svg
    [:svg {:class $state-icon :xmlns "http://www.w3.org/2000/svg" :width "800px" :height "800px" :viewBox "0 0 24 24" :id "Layer_1" :data-name "Layer 1"}
     [:defs
      [:style ".cls-1{fill:none;stroke:#020202;stroke-miterlimit:10;stroke-width:1.91px;}"]]
     [:rect {:class "cls-1" :x "2.43" :y "4.37" :width "4.78" :height "17.22" :rx "2.39"}]
     [:rect {:class "cls-1" :x "7.22" :y "4.37" :width "4.78" :height "17.22" :rx "2.39"}]
     [:rect {:class "cls-1" :x "12" :y "4.37" :width "4.78" :height "17.22" :rx "2.39"}]
     [:rect {:class "cls-1" :x "16.78" :y "4.37" :width "4.78" :height "17.22" :rx "2.39"}]
     [:line {:class "cls-1" :x1 "0.52" :y1 "8.2" :x2 "2.43" :y2 "8.2"}]
     [:line {:class "cls-1" :x1 "0.52" :y1 "17.76" :x2 "2.43" :y2 "17.76"}]
     [:line {:class "cls-1" :x1 "21.57" :y1 "8.2" :x2 "23.48" :y2 "8.2"}]
     [:line {:class "cls-1" :x1 "21.57" :y1 "17.76" :x2 "23.48" :y2 "17.76"}]
     [:line {:class "cls-1" :x1 "4.35" :y1 "21.59" :x2 "4.35" :y2 "23.5"}]
     [:line {:class "cls-1" :x1 "19.65" :y1 "21.59" :x2 "19.65" :y2 "23.5"}]
     [:line {:class "cls-1" :x1 "18.7" :y1 "1.5" :x2 "18.7" :y2 "4.37"}]
     [:line {:class "cls-1" :x1 "16.78" :y1 "1.5" :x2 "20.61" :y2 "1.5"}]]))

(defn ui-root [state]
  [:div
   [:h1 {:class (css :p-4 :font-bold :text-lg)} "Interpreted Hiccup"]

   [:div {:class (css :flex)}
    [:table {:class (css :flex-1)}
     [:thead
      [:tr
       [:th "ID"]
       [:th "Target"]
       [:th "Current"]
       [:th "State"]
       [:th "Last Update"]]]

     (into [:tbody]
       (for [row state]
         [:tr
          [:td {:class $col-num}
           (:id row)]
          [:td {:class $col-num}
           (format-temp (:target row))]
          [:td {:class $col-num
                :data-hot (> (:current row) 25)}
           [:span (format-temp (:current row))]]
          [:td {:class $col-state}
           (format-state (:state row))]
          [:td {:class $col-ts}
           (format-ts (:last-update row))]]
         ))]

    [:div {:class (css :flex-1)}
     [:div {:class (css :p-4)}
      "This animation should show stutter if the 16ms budget is used. Sorry, too lazy to find something pretty. This is just what I had at hand. My m4 pro mac mini only begins to stutter at about 20x slowdown. My old Surface Go Tablet stutters without any slowdown."]
     [:svg {:class (css :block :w-full)
            :id "shadow-cljs-logo"
            :version "1.1"
            :viewBox "0 0 400 400"}
      [:title "shadow-cljs"]
      [:defs
       [:mask#shadow-cljs-logo-mask {:fill "#fff"}
        [:circle {:r "200" :cy "200" :cx "200"}]]]
      [:g
       {:fill-rule "evenodd"
        :fill "none"
        :stroke-width "0"
        :stroke "none"
        :mask "url(#shadow-cljs-logo-mask)"}

       [:g.circles
        [:circle.blue {:r "200" :cy "200" :cx "200" :fill "#4F80DF"}]
        [:circle.light-blue {:r "71.5" :cy "200" :cx "370" :fill "#89B4FF"}]
        [:circle.dark-green {:r "180" :cy "360" :cx "60" :fill "#40B400"}]
        [:circle.light-green {:r "129" :cy "320" :cx "280" :fill "#76E013"}]
        [:animateTransform
         {:attributeType "xml"
          :attributeName "transform"
          :type "rotate"
          :from "0 200 200"
          :to "360 200 200"
          :dur "3s"
          :repeatCount "indefinite"}]]

       ;; S shadow
       [:g {:transform "translate(10,10)"}
        [:path
         {:stroke-linecap "square"
          :stroke-width "16"
          :stroke "#aaa"
          :d "M247.183941,141.416413 C247.183941,74.7839971 148.383423,78.9723529 148.383423,141.416413 C148.383423,203.860473 265.090698,171.864644 265.090698,248.900057 C265.090698,325.93547 135,325.851749 135,251.708304"}]]
       ;; S
       [:path
        {:stroke-linecap "square"
         :stroke-width "16"
         :stroke "#FFFFFF"
         :d "M247.183941,141.416413 C247.183941,74.7839971 148.383423,78.9723529 148.383423,141.416413 C148.383423,203.860473 265.090698,171.864644 265.090698,248.900057 C265.090698,325.93547 135,325.851749 135,251.708304"}]
       ]]]

    ]])

(defonce root (rdom/createRoot js/document.body))

(defn render []
  (.render root (r/as-element (ui-root @state-ref))))

(def states ["heating" "cooling" "off"])

(defn update-random [state]
  (let [n (rand-int (count state))]
    (update state n merge {:current (* 100 (rand))
                           :state (rand-nth states)
                           :last-update (js/Date.now)})))

;; called once on page load via :init-fn in build config
(defn init []
  (render)

  (js/setInterval
    (fn []
      ;; the reason for doing this in microtasks is that it makes it easier to distinguish
      ;; the update stages in the chrome devtools
      (-> (js/Promise.resolve)
          ;; first the update the data
          (.then (fn [] (swap! state-ref update-random)))
          ;; then we generate the hiccup
          (.then (fn [] (ui-root @state-ref)))
          ;; translate hiccup to react elements
          (.then (fn [hiccup] (r/as-element hiccup)))
          ;; then let react do its thing, which actually is delayed and not immediately executed by react
          (.then (fn [rel] (.render root rel)))))
    100))

;; called after every hot-reload
(defn ^:dev/after-load reload! []
  (render))